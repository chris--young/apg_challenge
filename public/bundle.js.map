{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app.js","utils/request.js","views/database/database.js","views/header/header.js","views/nav/nav.js","views/upload/upload.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjfile":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * /public/app.js\n *\n * @description: Main frontend script\n * @author: Chris Young (young.c.5690@gmail.com)\n * @created: Septemeber 17th 2015\n */\n\n(function () {\n\n  'use strict';\n\n  var Header = require('./views/header/header.js'),\n      Nav = require('./views/nav/nav.js'),\n      Database = require('./views/database/database.js'),\n      Upload = require('./views/upload/upload.js');\n\n  var App = Backbone.Router.extend({\n\n    /**\n     * initialize()\n     * @description: Sets up the application\n     */\n    initialize: function () {\n      var that = this;\n\n      this.views = {};\n\n      Backbone.history.start();\n\n      async.series([function (callback) {\n        that.header = new Header({\n          el: $('#header'),\n          callback: callback\n        });\n      }, function (callback) {\n        that.nav = new Nav({\n          el: $('#nav'),\n          callback: callback\n        });\n      }], function (error) {\n        if (error)\n          $('#content').html(ERROR_TEMPLATE());\n\n        $('#content-wrapper').removeClass('hidden');\n        $('#content-wrapper').height($('#content-wrapper').height() - $('#header').height());\n      });\n    },\n\n    /**\n     * routes\n     * @description: Declares app view routing\n     */\n    routes: {\n      '': 'redirectToDatabase',\n      'database': 'database',\n      'upload': 'upload'\n    },\n\n    redirectToDatabase: function () {\n      window.location.replace('#/database');\n    },\n\n    database: function () {\n      if (!this.views.database)\n        this.views.database = new Database({\n          el: $('#content')\n        });\n      else\n        this.views.database.render();\n    },\n\n    upload: function () {\n      if (!this.views.upload)\n        this.views.upload = new Upload({\n          el: $('#content')\n        });\n      else\n        this.views.upload.render();\n    }\n\n  });\n\n  var app = new App();\n\n})();\n\n","/**\n * public/utils/request.js\n *\n * @description: Fetch wrapper class with automatic error handling\n * @author: Chris Young (young.c.5690@gmail.com)\n * @created: July 14th 2015\n */\n\n/**\n * Request()\n * @description: Creates a new Request object and makes an ajax request\n * @param: {Object} options\n */\nfunction Request(options) {\n  _.extend(this, options);\n\n  this.fetch();\n}\n\n/**\n * fetch()\n * @description: Makes an ajax request using fetch\n */\nRequest.prototype.fetch = function () {\n  var that = this;\n\n  /**\n   * checkStatus()\n   * @description: Breaks the promise chain if response is non-200\n   * @param: {Object} response\n   */\n  function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300)\n      return response;\n\n    throw {\n      statusText: response.statusText,\n      response: response\n    };\n  }\n\n  fetch(this.url, {\n    method: this.method || 'get',\n    headers: this.headers,\n    body: this.body\n  }).then(checkStatus)\n    .then(function (response) {\n      if (response.status === 204)\n        return;\n\n      if (response.headers.get('Content-Type') === 'application/json')\n        return response.json();\n        \n      return response.text();\n    }).then(function (body) {\n      return that.callback(null, body);\n    }).catch(function (error) {\n      if (error.response && error.response.status === 204)\n        return that.callback();\n\n      return that.callback(error);\n    });\n};\n\nmodule.exports = Request;\n","/**\n * /public/views/database/database.js\n *\n * @description: Database view\n * @author: Chris Young (young.c.5690@gmail.com)\n * @created: September 17th 2015\n */\n\nvar Request = require('../../utils/request.js');\n\nmodule.exports = Backbone.View.extend({\n\n  /**\n   * initialize()\n   * @description: Loads view template\n   * @param: {Object} options\n   */\n  initialize: function (options) {\n    var that = this;\n\n    _.extend(this, options);\n\n    new Request({\n      url: 'views/database/database.tmpl',\n      callback: function (error, body) {\n        if (!error)\n          that.template = _.template(body);\n\n        that.render();\n      }\n    });\n  },\n\n  /**\n   * render()\n   * @description: Draws the view\n   */\n  render: function () {\n    if (!this.template)\n      return this.$el.html(_.template($('#error-template').html())());\n\n    this.$el.html(this.template());\n  }\n\n});\n\n","/**\n * /public/views/header/header.js\n *\n * @description: Header view\n * @author: Chris Young (young.c.5690@gmail.com)\n * @created: September 17th 2015\n */\n\nvar Request = require('../../utils/request.js');\n\nmodule.exports = Backbone.View.extend({\n\n  /**\n   * initialize()\n   * @description: Loads view template\n   * @param: {Object} options\n   */\n  initialize: function (options) {\n    var that = this;\n\n    _.extend(this, options);\n\n    new Request({\n      url: 'views/header/header.tmpl',\n      callback: function (error, body) {\n        if (error)\n          return that.callback(error);\n\n        that.template = _.template(body);\n        that.render();\n        that.$el.removeClass('hidden');\n\n        return that.callback();\n      }\n    });\n  },\n\n  /**\n   * render()\n   * @description: Draws the view\n   */\n  render: function () {\n    this.$el.html(this.template());\n\n    $('#content-wrapper').css('height', 'calc(100% - ' + this.$el.height() + 'px)');\n  }\n\n});\n\n","/**\n * /public/views/nav.js\n *\n * @description: Navigation view\n * @author: Chris Young (cyoung@mobiquityinc.com)\n * @created: September 17th 2015\n */\n\nvar Request = require('../../utils/request.js');\n\nmodule.exports = Backbone.View.extend({\n\n  /**\n   * initialize()\n   * @description: Loads view template\n   * @param: {Object} options\n   */\n  initialize: function (options) {\n    var that = this;\n\n    _.extend(this, options);\n\n    new Request({\n      url: 'views/nav/nav.tmpl',\n      callback: function (error, body) {\n        if (error)\n          return options.callback(error); \n\n        that.template = _.template(body);\n        that.render();\n        that.$el.removeClass('hidden');\n        that.listenTo(that.router, 'route', that.setActive);\n\n        return options.callback();\n      }\n    });\n  },\n\n  /**\n   * render()\n   * @description: Draws the view\n   */\n  render: function () {\n    this.$el.html(this.template());\n\n    this.toggleNav();\n    this.setActive();\n  },\n\n  /**\n   * events\n   * @description: Declares click events\n   */\n  events: {\n    'click #nav-toggle': 'toggleNav',\n  },\n\n  /**\n   * toggleNav()\n   * @description: Collpases and expands the navigation view to increase main content width\n   * @param: {Object} event\n   */\n  toggleNav: function (event) {\n    if (event) {\n      event.preventDefault();\n      this.collapsed = !this.collapsed; \n    }\n\n    if (this.collapsed) {\n      this.$el.removeClass('nav-expanded').addClass('nav-collapsed');\n      $('#nav [data-toggle=\"tooltip\"]').tooltip();\n    } else {\n      $('#nav [data-toggle=\"tooltip\"]').tooltip('destroy');\n      this.$el.removeClass('nav-collapsed').addClass('nav-expanded');\n    }\n  },\n\n  /**\n   * setActive()\n   * @description: Highlights the current navigation item\n   */\n  setActive: function () {\n    var $a = $('#nav a[href=\"' + window.location.hash + '\"]');\n\n    $('#nav li').removeClass('active');\n\n    if ($a.hasClass('nav-sub-level'))\n      $a.parent().parent().parent().addClass('active').addClass('expanded');\n\n    $a.parent().addClass('active');\n  }\n\n});\n\n","/**\n * /public/views/upload/upload.js\n *\n * @description: Upload view\n * @author: Chris Young (young.c.5690@gmail.com)\n * @created: September 17th 2015\n */\n\nvar Request = require('../../utils/request.js');\n\nmodule.exports = Backbone.View.extend({\n\n  /**\n   * initialize()\n   * @description: Loads view template\n   * @param: {Object} options\n   */\n  initialize: function (options) {\n    var that = this;\n\n    _.extend(this, options);\n\n    new Request({\n      url: 'views/upload/upload.tmpl',\n      callback: function (error, body) {\n        if (!error)\n          that.template = _.template(body);\n\n        that.render();\n      }\n    });\n  },\n\n  /**\n   * render()\n   * @description: Draws the view\n   */\n  render: function () {\n    if (!this.template)\n      return this.$el.html(_.template($('#error-template').html())());\n\n    this.$el.html(this.template());\n  }\n\n});\n"]}